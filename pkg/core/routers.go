/*
 * Trissect Goal Service
 *
 * Handles CRUD operations on Goal resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package core

import (
	"net/http"

	"github.com/tuuturu/trissect-goal-service/pkg/core/api"

	"github.com/gin-gonic/gin"
)

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"AddGoal",
		http.MethodPost,
		"/goals",
		api.AddGoal,
	},

	{
		"GetAllGoals",
		http.MethodGet,
		"/goals",
		api.GetAllGoals,
	},

	{
		"DeleteGoal",
		http.MethodDelete,
		"/goals/:id",
		api.DeleteGoal,
	},

	{
		"GetGoal",
		http.MethodGet,
		"/goals/:id",
		api.GetGoal,
	},

	{
		"UpdateGoal",
		http.MethodPatch,
		"/goals/:id",
		api.UpdateGoal,
	},
}
