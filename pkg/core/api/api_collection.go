/*
 * Trissect Goal Service
 *
 * Handles CRUD operations on Goal resources
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"

	"github.com/google/uuid"
	"github.com/tuuturu/trissect-goal-service/pkg/core/models"

	"github.com/tuuturu/trissect-goal-service/pkg/core"

	"github.com/gin-gonic/gin"
)

// AddGoal -
func AddGoal(storage core.StorageClient) gin.HandlerFunc {
	return func(c *gin.Context) {
		var (
			err  error
			goal models.Goal
		)

		err = c.Bind(&goal)
		if err != nil {
			c.Status(http.StatusBadRequest)

			return
		}

		goal.Id = uuid.New().String()
		goal.Author = "janedoe"

		err = storage.Add(goal)
		if err != nil {
			c.Status(http.StatusInternalServerError)

			return
		}

		c.JSON(http.StatusCreated, goal)
	}
}

// GetAllGoals -
func GetAllGoals(storage core.StorageClient) gin.HandlerFunc {
	return func(c *gin.Context) {
		author := "janedoe"

		goals, err := storage.GetAll(core.StorageFilter{
			Author: core.StringToPtr(author),
		})
		if err != nil {
			c.Status(http.StatusInternalServerError)

			return
		}

		c.JSON(http.StatusOK, goals)
	}
}
